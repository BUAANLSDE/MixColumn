<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="SqlMapper.TemplateMapper">


	<!-- 插入实体 -->
	<insert id="insertEntity" useGeneratedKeys="true" keyProperty="id"
		statementType="STATEMENT">
		insert ignore into ${tablename} (
		<foreach collection="fields" item="field" open="" close=""
			separator=",">
			${field}
		</foreach>
		)
		values(
		<foreach collection="entitys" item="entity" open="" close=""
			separator=",">
			"${entity}"
		</foreach>
		)
	</insert>

	<!-- 新建一张表 parameterType="ClassifyUrl" -->
	<update id="createNewTable" parameterType="String">
		create table if not exists ${tableName} (
		id int(11) NOT NULL AUTO_INCREMENT,
		<foreach collection="fields" item="field" open="" close=""
			separator="">
			${field} varchar(255) DEFAULT NULL,
		</foreach>
		PRIMARY KEY (id),
		UNIQUE KEY ${uniqueField} (${uniqueField}) USING HASH
		)
	</update>
	
	<!-- mixcolumn -->
    
    <!-- 复制表结构 -->
    <update id="copyTableStructure"  parameterType="String" statementType="STATEMENT">
    	create table ${new_table} like ${table}
    </update>
    
    <!-- 复制表全部数据  -->
    <insert id="copyTableData" parameterType="String">
    	insert into ${new_table} select * from ${table}
    </insert>
    
    <!-- update  -->
	<update id="updateColumn" parameterType="String">  
        update ${table}  set 
        <foreach collection="equals" item="equal" open="" close=""
			separator=",">
			${equal}
		</foreach>  
        where id = ${id}  
    </update> 
    
    <select id="getAllData"  parameterType="String" resultType="Hashmap">
    	select  id,
    	<foreach collection="columns" item="column" open="" close=""
			separator=",">
			${column}
		</foreach>
    	from ${table}  
    </select>
	
	<!-- 添加一列 -->
    <update id="addColumn"  parameterType="String" statementType="STATEMENT">
    	alter table ${table} add column ${column} varchar(255)
    </update>

	<!-- 删除一列  -->
	<update id="deleteColumn" parameterType="String">
		alter table ${table} drop column ${column}
	</update>
    
    <!-- 从副表向主表的column中复制数据 -->
    <update id="copyDatatoColumn" parameterType="String">  
        update ${key_table}  set 
        <foreach collection="equals" item="equal" open="" close=""
			separator=",">
			${equal}
		</foreach>  
        where ${key_identity_column} = "${side_identity_value}" 
    </update> 
    
	<select id="getDataFromSideTable"  parameterType="String" resultType="Hashmap">
    	select ${identity_column},
    	<foreach collection="columns" item="column" open="" close=""
			separator=",">
			${column}
		</foreach>  
    	 from ${table}  
    </select>
    
    <select id="getColumns"  parameterType="String" resultType="Hashmap">
    	select COLUMN_NAME from information_schema.COLUMNS where table_name='${table}' and table_schema='${database}'
    </select>
    
    <!-- reset id -->
    <update id="dropID" parameterType="String">
		alter table  ${table} drop id 
	</update>
	
	<update id="addID" parameterType="String">
		alter table  ${table} add id int(11) NOT NULL first
	</update>
	
	<update id="primaryID" parameterType="String">
		alter table  ${table} MODIFY COLUMN  id int(11) NOT NULL AUTO_INCREMENT,ADD PRIMARY  KEY(id)
	</update>
    
    <update id="addTable" parameterType="String">
		 insert ignore into ${tableA} select  *  from ${tableB};
	</update>
	
	 <update id="deleteTable" parameterType="String">
		 drop table if exists ${table}
	</update>
	
	 <update id="renameTable" parameterType="String">
		 rename table ${old_name} to ${new_name}
	</update>
	
   
</mapper>